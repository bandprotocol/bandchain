open Jest;
open Bech32;
open Expect;

describe("Expect Bech32 to work correctly", () => {
  test("should be able do fromWords correctly", () =>
    expect(
      [|
        9,
        14,
        9,
        9,
        13,
        6,
        4,
        16,
        24,
        20,
        29,
        15,
        23,
        28,
        15,
        9,
        29,
        31,
        16,
        0,
        21,
        31,
        4,
        19,
        25,
        28,
        24,
        18,
        15,
        20,
        24,
        14,
      |]
      ->fromWords,
    )
    |> toEqual([|
         75,
         146,
         150,
         152,
         144,
         197,
         58,
         251,
         241,
         233,
         239,
         224,
         10,
         252,
         147,
         207,
         49,
         39,
         211,
         14,
       |])
  );

  test("should be able do toWords correctly", () =>
    expect(
      [|
        75,
        146,
        150,
        152,
        144,
        197,
        58,
        251,
        241,
        233,
        239,
        224,
        10,
        252,
        147,
        207,
        49,
        39,
        211,
        14,
      |]
      ->toWords,
    )
    |> toEqual([|
         9,
         14,
         9,
         9,
         13,
         6,
         4,
         16,
         24,
         20,
         29,
         15,
         23,
         28,
         15,
         9,
         29,
         31,
         16,
         0,
         21,
         31,
         4,
         19,
         25,
         28,
         24,
         18,
         15,
         20,
         24,
         14,
       |])
  );

  test("should be able to encode correctly", () =>
    expect(
      [|
        9,
        14,
        9,
        9,
        13,
        6,
        4,
        16,
        24,
        20,
        29,
        15,
        23,
        28,
        15,
        9,
        29,
        31,
        16,
        0,
        21,
        31,
        4,
        19,
        25,
        28,
        24,
        18,
        15,
        20,
        24,
        14,
      |]
      |> encode("bandvaloper"),
    )
    |> toBe("bandvaloper1fwffdxysc5a0hu0falsq4lyneucj05cwryzfp0")
  );

  test("should be able to decode correctly", () =>
    expect("bandvaloper1fwffdxysc5a0hu0falsq4lyneucj05cwryzfp0"->decode)
    |> toEqual(
         Bech32.decoded_t(
           ~prefix="bandvaloper",
           ~words=[|
             9,
             14,
             9,
             9,
             13,
             6,
             4,
             16,
             24,
             20,
             29,
             15,
             23,
             28,
             15,
             9,
             29,
             31,
             16,
             0,
             21,
             31,
             4,
             19,
             25,
             28,
             24,
             18,
             15,
             20,
             24,
             14,
           |],
         ),
       )
  );
});
